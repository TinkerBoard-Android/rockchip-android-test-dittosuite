syntax = "proto2";

package dittosuiteproto;

enum ReadWriteType {
  SEQUENTIAL = 0;
  RANDOM = 1;
}

enum ReadWriteReseeding {
  ONCE = 0;
  EACH_ROUND_OF_CYCLES = 1;
  EACH_CYCLE = 2;
}

message InstructionOpenFile {
  required string file = 1;
  optional string output_fd = 2;
  optional bool create = 3 [default = true];
}

message InstructionDeleteFile {
  required string file = 1;
}

message InstructionCloseFile {
  required string input_fd = 1;
}

message InstructionResizeFile {
  required string input_fd = 1;
  required int64 size = 2;
}

message InstructionWriteFile {
  required string input_fd = 1;
  optional int64 size = 2 [default = -1];
  optional int64 block_size = 3 [default = 4096];
  optional int64 starting_offset = 4 [default = 0];
  optional ReadWriteType type = 5 [default = SEQUENTIAL];
  optional uint32 seed = 6;
  optional bool fsync = 7 [default = false];
  optional ReadWriteReseeding reseeding = 8 [default = ONCE];
}

message InstructionReadFile {
  enum ReadFAdvise {
    AUTOMATIC = 0;
    NORMAL = 1;
    SEQUENTIAL = 2;
    RANDOM = 3;
  }
  required string input_fd = 1;
  optional int64 size = 2 [default = -1];
  optional int64 block_size = 3 [default = 4096];
  optional int64 starting_offset = 4 [default = 0];
  optional ReadWriteType type = 5 [default = SEQUENTIAL];
  optional uint32 seed = 6;
  optional ReadFAdvise fadvise = 7 [default = AUTOMATIC];
  optional ReadWriteReseeding reseeding = 8 [default = ONCE];
}

message InstructionReadDirectory {
  required string directory_name = 1;
  required string output = 2;
}

message Instruction {
  optional int32 repeat = 1 [default = 1];
  oneof instruction_oneof {
    InstructionSet instruction_set = 2;
    InstructionOpenFile instruction_open_file = 3;
    InstructionDeleteFile instruction_delete_file = 4;
    InstructionCloseFile instruction_close_file = 5;
    InstructionResizeFile instruction_resize_file = 6;
    InstructionWriteFile instruction_write_file = 7;
    InstructionReadFile instruction_read_file = 8;
    InstructionReadDirectory instruction_read_directory = 9;
  }
}

message InstructionSet {
  repeated Instruction instructions = 1;
}

message Global {
  optional string absolute_path = 1 [default = ""];
}

message Benchmark {
  required Instruction main = 1;
  required Global global = 2;
}
